---
- name: Helix Control-M Agent
  hosts: localhost
  tasks:
    - name: Install packages Redhat distros
      ansible.builtin.yum:
        name:
          - wget
          - java-11-openjdk
        state: present
      when: ansible_os_family == 'RedHat'
      become: true
      register: myouput

    - name: Install packages Debian distros
      ansible.builtin.apt:
        name:
          - wget
          - openjdk-11-jre
        state: present
      when: ansible_os_family == 'Debian'
      become: true
      register: myouput

    - debug:
        var: myouput.stdout_lines

    - name: Add the Control-M user
      ansible.builtin.user:
        name: "{{ myctmuser }}"
        shell: /bin/bash
        home: /opt/{{ myctmuser }}
        comment: Control-M Agent user
      become: true

    #- name: Download installer
    #  ansible.builtin.get_url:
    #    url: https://bmc-prod-saas-agent-application-artifacts.s3.us-west-2.amazonaws.com/9.0.21.080/extracted/1277/root/apps/FZL/9.0.21.080/FZ4.9.0.21.080_Linux-x86_64.BIN
    #    dest: /opt/{{ myctmuser }}
    #    mode: 0755
    #    owner: "{{ myctmuser }}"
    #  become: true

    - name: Download response file
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/mpetit480/ansible/main/response.xml
        dest: /opt/{{ myctmuser }}
        mode: 0755
        owner: "{{ myctmuser }}"
      become: true

    - name: Replace xxxxx with Agent tag
      replace:
        path: /opt/{{ myctmuser }}/response.xml
        regexp: 'xxxxx'
        replace: "{{ myagentname }}"
      become: true

 #   - name: Install Agent
 #     become: yes
 #     shell: ./FZ4.9.0.21.080_Linux-x86_64.BIN -silent response.xml -BMC_INST_JAVA_HOME {{ myjavapath }} -token '{{ myagttoken }}'
 #     args:
 #       chdir: /opt/{{ myctmuser }}

    - name: Verify install
      become: true
      command: cat installed-versions.txt    chdir=/opt/{{ myctmuser }}
      register: command_output
    - name: Verify install 2 
      debug:
        var  : command_output.stdout_lines

    - name: API env add
      become: yes
      become_user: "{{ myctmuser }}"
      shell: . /opt/{{ myctmuser }}/.bash_profile && ctm env add {{ myenv }} {{ myapi }} {{myapitoken}}
